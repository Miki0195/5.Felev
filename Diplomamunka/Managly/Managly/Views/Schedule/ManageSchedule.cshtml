dateClick: function (info) {
    let today = new Date().toISOString().split("T")[0];
    selectedDate = info.dateStr;

    Promise.all([
        fetch(`/api/schedule/${selectedWorkerId}`).then(response => response.json()),
        fetch(`/api/leave/${selectedWorkerId}`).then(response => response.json())
    ])
        .then(([scheduleEvents, leaveEvents]) => {
            let shiftExists = scheduleEvents.find(event => event.start === selectedDate);
            let vacationExists = leaveEvents.find(event => event.start === selectedDate);

            // Check for any vacation (both approved and pending)
            if (vacationExists) {
                const status = vacationExists.title.includes("(Pending)") ? "pending" : "approved";
                showCannotAddShiftModal(status);
                return;
            }

            if (info.dateStr < today) {
                if (shiftExists) {
                    existingShiftId = shiftExists.id;
                    showDeleteShiftModal();
                } else {
                    showCannotAddPastShiftModal();
                }
                return;
            }

            if (shiftExists) {
                existingShiftId = shiftExists.id;
                showDeleteShiftModal();
            } else {
                showTimePickerModal();
            }
        })
        .catch(error => console.error("Error:", error));
}

function showCannotAddShiftModal(vacationStatus = 'approved') {
    const modalBody = document.querySelector('#cannotAddShiftModal .modal-body p');
    modalBody.innerHTML = `You cannot add a shift on this date because the user has a <strong>${vacationStatus} vacation</strong> request.`;
    
    let modal = new bootstrap.Modal(document.getElementById("cannotAddShiftModal"));
    modal.show();
} 