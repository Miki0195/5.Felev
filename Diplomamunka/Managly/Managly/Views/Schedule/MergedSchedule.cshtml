@{
    ViewData["Title"] = "Merged Schedule";
}

<h2 class="text-center mb-4">Merged Worker Schedule</h2>

<div class="container">
    <div class="card p-4 shadow">
        <h5 class="mb-3">All Worker Schedules</h5>
        <div id="mergedCalendar"></div>
    </div>
</div>

<!-- Include FullCalendar -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

<script>document.addEventListener("DOMContentLoaded", function () {
    loadNotifications();
    var calendarEl = document.getElementById("mergedCalendar");
    var mergedCalendar = new FullCalendar.Calendar(calendarEl, {
        initialView: "dayGridMonth",
        editable: false,
        selectable: false,
        //events: async function (fetchInfo, successCallback, failureCallback) {
        //    try {
        //        let response = await fetch("/api/schedule/all");
        //        let schedules = await response.json();

        //        if (!Array.isArray(schedules)) throw new Error("Invalid API response format");

        //        successCallback(schedules);
        //    } catch (error) {
        //        console.error("Error fetching merged schedule:", error);
        //        failureCallback(error);
        //    }
        //},
        events: async function (fetchInfo, successCallback, failureCallback) {
            try {
                let response = await fetch("/api/schedule/all");
                let schedules = await response.json();

                if (!Array.isArray(schedules)) throw new Error("Invalid API response format");

                console.log("Fetched schedules:", schedules); // Debugging

                successCallback(schedules);
            } catch (error) {
                console.error("Error fetching merged schedule:", error);
                failureCallback(error);
            }
        },
        eventDidMount: function (info) {
            let eventTitle = info.event.title;
            let parts = eventTitle.split("\n");
            let timeText = parts[0] || "";
            let commentText = parts.length > 1 ? parts[1] : "";
            let workerName = info.event.extendedProps.workerName;

            if (info.el.querySelector(".event-content")) return;

            info.el.innerHTML = `
                <div class="event-content" style="color: white; font-weight: bold;">${workerName}</div>
                <div class="event-content" style="color: white;"><strong>${timeText}</strong></div>
                ${commentText ? `<div class="event-content" style="font-size: 0.8rem; color: black">${commentText}</div>` : ""}
            `;
        }
    });

    mergedCalendar.render();
});</script>
