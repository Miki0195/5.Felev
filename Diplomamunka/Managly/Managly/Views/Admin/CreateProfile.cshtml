@model Managly.Models.CreateProfile

<div class="profile-create-container">
    <div class="glass-card">
        <h2 class="text-center mb-4">Create New Profile</h2>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <form asp-action="CreateProfile" method="post" class="needs-validation" novalidate>
            <div class="form-floating mb-3">
                <input asp-for="Name" class="form-control glass-input" placeholder="Name" required 
                       data-val="true" data-val-required="Name is required" />
                <label asp-for="Name">Full Name</label>
                <div class="invalid-feedback">Please enter a name.</div>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Email" class="form-control glass-input" placeholder="Email" required 
                       data-val="true" data-val-required="Email is required" 
                       data-val-email="Please enter a valid email address" />
                <label asp-for="Email">Email Address</label>
                <div class="invalid-feedback">Please enter a valid email address.</div>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-floating mb-4">
                <select asp-for="Role" class="form-select glass-input" required
                        data-val="true" data-val-required="Role is required">
                    <option value="">Select a role...</option>
                    <option value="Employee">Employee</option>
                    <option value="Manager">Manager</option>
                </select>
                <label asp-for="Role">Role</label>
                <div class="invalid-feedback">Please select a role.</div>
                <span asp-validation-for="Role" class="text-danger"></span>
            </div>

            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary btn-lg glass-button">
                    <i class="bi bi-person-plus-fill me-2"></i>Create Profile
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            loadNotifications();

            // Form validation
            const form = document.querySelector('.needs-validation');
            const inputs = form.querySelectorAll('input, select');

            // Handle form submission
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            });

            // Clear validation messages on input
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    // Remove bootstrap validation classes
                    this.classList.remove('is-invalid');
                    this.classList.remove('is-valid');
                    
                    // Clear ASP.NET validation messages
                    const validationSpan = this.parentElement.querySelector('[data-valmsg-for]');
                    if (validationSpan) {
                        validationSpan.textContent = '';
                    }
                    
                    // Reset form validation state if all fields are valid
                    if (form.checkValidity()) {
                        form.classList.remove('was-validated');
                    }
                });
            });
        });</script>
}