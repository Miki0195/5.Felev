@{
    ViewData["Title"] = "Select Favorite Team";
    var favoriteTeam = ViewBag.FavoriteTeam as Beadando.Models.Team;
}

@section Styles {
    <link rel="stylesheet" href="~/css/FavoriteTeam/Index.css" />
}

<h1 class="select-favorite-team-header">Select Your Favorite Team</h1>

@if (favoriteTeam != null)
{
    <div class="select-favorite-team-alert">
        <strong>Your Favorite Team:</strong> @favoriteTeam.Name
    </div>
}

<div id="favoriteTeamForm" class="select-favorite-team-form-container">
    <div class="select-favorite-team-form-group">
        <label for="leagueSelect">Select League:</label>
        <select id="leagueSelect" class="form-control">
            <option value="">-- Select League --</option>
            @foreach (var league in ViewBag.Leagues as List<Beadando.Models.League>)
            {
                <option value="@league.Id">@league.Name</option>
            }
        </select>
    </div>

    <div id="teamsContainer" class="select-favorite-team-list-container mt-3"></div>
</div>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success favorite-team-success-message">
        @TempData["SuccessMessage"]
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('leagueSelect').addEventListener('change', function () {
                const leagueId = this.value;

                if (!leagueId) {
                    document.getElementById('teamsContainer').innerHTML = "";
                    return;
                }

                fetch(`/FavoriteTeam/TeamsByLeague?leagueId=${leagueId}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.text();
                    })
                    .then(html => {
                        document.getElementById('teamsContainer').innerHTML = html;
                    })
                    .catch(error => console.error("Error fetching teams:", error));
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            const successMessage = document.querySelector('.favorite-team-success-message');
            if (successMessage) {
                setTimeout(() => {
                    successMessage.style.transition = 'opacity 0.5s ease-out';
                    successMessage.style.opacity = '0';
                    setTimeout(() => successMessage.remove(), 500); 
                }, 2000); 
            }
        });
        


    </script>
}
