@model Beadando.Models.Match

@section Styles {
    <link rel="stylesheet" href="~/css/Match/Create.css" />
}

<h2 class="add-match-header"><strong>Add a New Match</strong></h2>

<form asp-action="Create" method="post" class="add-match-form">
    <div class="add-match-form-group">
        <label for="League" class="add-match-label">League</label>
        <select id="League" name="LeagueId" class="form-control add-match-select" required>
            <option value="">Select League</option>
            @foreach (var league in ViewBag.Leagues as List<Beadando.Models.League>)
            {
                <option value="@league.Id">@league.Name</option>
            }
        </select>
        <span asp-validation-for="LeagueId" class="add-match-validation text-danger"></span>
    </div>

    <div class="add-match-form-group">
        <label for="HomeTeam" class="add-match-label">Home Team</label>
        <select id="HomeTeam" name="HomeTeamId" class="form-control add-match-select" required>
            <option value="">Select Team</option>
        </select>
        <span asp-validation-for="HomeTeamId" class="add-match-validation text-danger"></span>
    </div>

    <div class="add-match-form-group">
        <label for="AwayTeam" class="add-match-label">Away Team</label>
        <select id="AwayTeam" name="AwayTeamId" class="form-control add-match-select" required>
            <option value="">Select Team</option>
        </select>
        <span asp-validation-for="AwayTeamId" class="add-match-validation text-danger"></span>
    </div>

    <div class="add-match-form-group">
        <label asp-for="FinalScore" class="add-match-label"></label>
        <input asp-for="FinalScore" class="form-control add-match-input" placeholder="Enter final score" />
        <span asp-validation-for="FinalScore" class="add-match-validation text-danger"></span>
    </div>

    <div class="add-match-form-group">
        <label asp-for="HalfTimeScore" class="add-match-label"></label>
        <input asp-for="HalfTimeScore" class="form-control add-match-input" placeholder="Enter halftime score" />
        <span asp-validation-for="HalfTimeScore" class="add-match-validation text-danger"></span>
    </div>

    <div class="add-match-form-group">
        <label asp-for="StartTime" class="add-match-label"></label>
        <input asp-for="StartTime" type="datetime-local" class="form-control add-match-input" required />
        <span asp-validation-for="StartTime" class="add-match-validation text-danger"></span>
    </div>

    <div class="add-match-form-group">
        <label asp-for="Report" class="add-match-label"></label>
        <textarea asp-for="Report" class="form-control add-match-textarea" placeholder="Enter report"></textarea>
        <span asp-validation-for="Report" class="add-match-validation text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary add-match-button">Submit</button>
</form>

@if (TempData["CreateSuccessMessage"] != null)
{
    <div class="alert alert-success create-success-message">
        @TempData["CreateSuccessMessage"]
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", () => {
        const leagueDropdown = document.getElementById("League");
        const homeTeamDropdown = document.getElementById("HomeTeam");
        const awayTeamDropdown = document.getElementById("AwayTeam");

        let allTeams = [];

        
        leagueDropdown.addEventListener("change", function () {
            const leagueId = this.value;

            
            homeTeamDropdown.innerHTML = '<option value="">Select Team</option>';
            awayTeamDropdown.innerHTML = '<option value="">Select Team</option>';
            allTeams = []; 

            if (leagueId) {
                fetch(`/EditMatch/GetTeamsByLeague?leagueId=${leagueId}`)
                    .then(response => response.json())
                    .then(data => {
                        allTeams = data; 
                        populateDropdowns(data);
                    })
                    .catch(error => console.error("Error fetching teams:", error));
            }
        });

        
        function populateDropdowns(teams) {
            teams.forEach(team => {
                const homeOption = document.createElement("option");
                homeOption.value = team.id;
                homeOption.textContent = team.name;
                homeTeamDropdown.appendChild(homeOption);

                const awayOption = document.createElement("option");
                awayOption.value = team.id;
                awayOption.textContent = team.name;
                awayTeamDropdown.appendChild(awayOption);
            });
        }

        
        homeTeamDropdown.addEventListener("change", function () {
            const selectedHomeTeamId = this.value;
            filterTeams(awayTeamDropdown, selectedHomeTeamId);
        });


        
        function filterTeams(targetDropdown, selectedTeamId) {
            
            targetDropdown.innerHTML = '<option value="">Select Team</option>';

            allTeams
                .filter(team => team.id !== parseInt(selectedTeamId)) 
                .forEach(team => {
                    const option = document.createElement("option");
                    option.value = team.id;
                    option.textContent = team.name;
                    targetDropdown.appendChild(option);
                });
        }
    });
</script>
}
