@{
    ViewData["Title"] = "Export Data";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Export/Index.css" />
}


<div class="container mt-5 export-data">
    <h1 class="text-center mb-4 export-data-header">
        <strong>Export Matches to XML</strong>
    </h1>

    <div class="card shadow-lg export-data-form-container">
        <div class="card-body">
            <form asp-action="ExportToXml" method="post" class="needs-validation" novalidate>
                <div class="form-group mb-3 custom-dropdown-container">
                    <label for="filterType" class="custom-dropdown-label">Filter By:</label>
                    <div class="custom-dropdown-wrapper">
                        <select id="filterType" name="filterType" class="custom-dropdown">
                            <option value="team">Team</option>
                            <option value="league">League</option>
                        </select>
                    </div>
                </div>

                <div class="form-group mb-3" id="teamsDropdown" style="display: none;">
                    <label for="teamIds" class="form-label">Select Teams (Minimum 1):</label>
                    <select id="teamIds" name="filterIds" class="form-select" multiple>
                        @foreach (var team in ViewBag.Teams as List<Beadando.Models.Team>)
                        {
                            <option value="@team.Id">@team.Name</option>
                        }
                    </select>
                    <div id="selectedTeams" class="mt-2">
                        <strong>Selected Teams:</strong>
                        <ul id="selectedTeamsList" class="list-group"></ul>
                    </div>
                </div>

                <div class="form-group mb-3" id="leaguesDropdown" style="display: none;">
                    <label for="leagueIds" class="form-label">Select Leagues (Minimum 1):</label>
                    <select id="leagueIds" name="filterIds" class="form-select" multiple>
                        @foreach (var league in ViewBag.Leagues as List<Beadando.Models.League>)
                        {
                            <option value="@league.Id">@league.Name</option>
                        }
                    </select>
                    <div id="selectedLeagues" class="mt-2">
                        <strong>Selected Leagues:</strong>
                        <ul id="selectedLeaguesList" class="list-group"></ul>
                    </div>
                </div>

                @if (TempData["ExportErrorMessage"] != null)
                {
                    <div id="error-message" class="alert alert-warning export-alert-message">
                        @TempData["ExportErrorMessage"]
                    </div>
                }

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary btn-lg export-data-button">
                        <i class="fas fa-download"></i> Export to XML
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>



@section Scripts {
    <script>function updateSelectedList(selectElementId, listElementId) {
            const selectedOptions = Array.from(document.getElementById(selectElementId).selectedOptions);
            const selectedList = document.getElementById(listElementId);

            selectedList.innerHTML = "";

            selectedOptions.forEach(option => {
                const listItem = document.createElement('li');
                listItem.textContent = option.textContent;
                selectedList.appendChild(listItem);
            });
        }

        document.getElementById('teamIds').addEventListener('change', function () {
            updateSelectedList('teamIds', 'selectedTeamsList');
        });

        document.getElementById('leagueIds').addEventListener('change', function () {
            updateSelectedList('leagueIds', 'selectedLeaguesList');
        });

        document.addEventListener("DOMContentLoaded", function () {
            const filterType = document.getElementById('filterType').value;
            const teamsDropdown = document.getElementById('teamsDropdown');
            const leaguesDropdown = document.getElementById('leaguesDropdown');

            if (filterType === "team") {
                teamsDropdown.style.display = "block";
                leaguesDropdown.style.display = "none";
            } else if (filterType === "league") {
                teamsDropdown.style.display = "none";
                leaguesDropdown.style.display = "block";
            }
        });

        document.getElementById('filterType').addEventListener('change', function () {
            const filterType = this.value;
            const teamsDropdown = document.getElementById('teamsDropdown');
            const leaguesDropdown = document.getElementById('leaguesDropdown');
            const teamSelect = document.getElementById('teamIds');
            const leagueSelect = document.getElementById('leagueIds');

            if (filterType === "team") {
                teamsDropdown.style.display = "block";
                leaguesDropdown.style.display = "none";

                Array.from(leagueSelect.options).forEach(option => option.selected = false);
            } else if (filterType === "league") {
                teamsDropdown.style.display = "none";
                leaguesDropdown.style.display = "block";

                Array.from(teamSelect.options).forEach(option => option.selected = false);
            }
        });


        document.querySelector('form').addEventListener('submit', function (event) {
            const filterType = document.getElementById('filterType').value;
            const selectedOptions =
                filterType === "team"
                    ? Array.from(document.getElementById('teamIds').selectedOptions)
                    : Array.from(document.getElementById('leagueIds').selectedOptions);

            if (selectedOptions.length === 0) {
                alert("Please select at least one option.");
                event.preventDefault();
            }
        });

        document.querySelector('form').addEventListener('submit', function () {
            const filterType = document.getElementById('filterType').value;
            const teamsDropdown = document.getElementById('teamIds');
            const leaguesDropdown = document.getElementById('leagueIds');

            if (filterType === "team") {
                teamsDropdown.name = "filterIds";
                leaguesDropdown.name = "";
            } else if (filterType === "league") {
                teamsDropdown.name = "";
                leaguesDropdown.name = "filterIds";
            }
        });

        function hideErrorMessageOnSelection() {
            const filterType = document.getElementById('filterType').value;
            const errorMessage = document.getElementById('error-message');
            const selectedOptions =
                filterType === "team"
                    ? Array.from(document.getElementById('teamIds').selectedOptions)
                    : Array.from(document.getElementById('leagueIds').selectedOptions);

            if (selectedOptions.length > 0 && errorMessage) {
                errorMessage.style.display = "none";
            }
        }

        document.getElementById('teamIds').addEventListener('change', hideErrorMessageOnSelection);
        document.getElementById('leagueIds').addEventListener('change', hideErrorMessageOnSelection);

        document.getElementById('filterType').addEventListener('change', function () {
            const errorMessage = document.getElementById('error-message');
            if (errorMessage) {
                errorMessage.style.display = "none"; 
            }
        });</script>
}
